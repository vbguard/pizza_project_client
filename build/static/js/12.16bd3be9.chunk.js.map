{"version":3,"sources":["services/api.js","components/AdminStocksEditor/AdminStocksEditor.module.css","components/AdminStocksList/AdminStockListItem/AdminStocksListItem.module.css","components/AdminStocksList/AdminStocksList.module.css","pages/AdminStocksPage/AdminStocksPage.module.css","redux/stocks/stocksOperations.js","redux/stocks/stocksSelector.js","components/AdminStocksEditor/utils.js","components/AdminStocksEditor/AdminStocksEditor.js","components/AdminStocksList/AdminStockListItem/AdminStocksListItem.js","components/AdminStocksList/AdminStocksList.js","pages/AdminStocksPage/AdminStocksPage.js"],"names":["source","axios","CancelToken","baseURL","getAllProducts","get","getProductsByCategory","category","cancelToken","token","getProductById","id","getAllIngredients","a","createNewIngredients","ingredients","post","postNewProduct","product","updateProductById","productId","newProduct","put","deleteProductById","delete","postImage","file","data","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","fetchStocks","dispatch","stocksActions","getStocksRequest","then","getStocksSuccess","promo","catch","error","getStocksError","sendStock","sendStockRequest","sendStockSuccess","newPromo","sendStockError","updateStock","updateStockRequest","updateStockSuccess","updatedPromo","updateStockError","deleteStock","deleteStockRequest","deleteStockSuccess","deletedPromo","_id","deleteStockError","sendFile","sendFileRequest","sendFileSuccess","image","sendFileError","getStockById","getStockByIdRequest","getStockByIdSuccess","getStockByIdError","state","stocks","items","fileLink","isLoading","item","getFileName","document","getElementById","value","replace","split","pop","innerHTML","mapDispatchToProps","onSubmitFile","stocksOperations","onSubmit","onCancel","cancelInput","onUpdate","connect","linkFile","stocksSelector","editStock","useState","showNotification","setShow","useEffect","setTimeout","stocksFile","setStockFile","stocksTitleEn","setStockTitleEn","stocksTitleRu","setStockTitleRu","stocksTitleUkr","setStockTitleUkr","stocksDescriptionEn","setStocksDescriptionEn","stocksDescriptionRu","setStocksDescriptionRu","stocksDescriptionUkr","setStocksDescriptionUkr","message","setMessage","messages","success","updated","successFile","setStock","images","title","en","description","ru","ukr","handleSubmit","e","preventDefault","linkImage","target","name","reset","Notification","confirm","Spinner","className","styles","form","fileUploadGreen","fileUpload","uploadLabel","type","uploadInput","onChange","stocksItem","files","uploadSpan","fileName","placeholder","formInput","onClick","formButton","formButtonReset","onRemove","stocksOperation","card","descriptionContainer","cardImg","src","buttonContainer","button","window","scrollTo","handleClickOnChangeButton","onFetchStocks","elements","cardList","map","key","AdminStocksPage","container"],"mappings":"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","file":"static/js/12.16bd3be9.chunk.js","sourcesContent":["import axios from \"axios\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\n\n//for Products\nconst getAllProducts = () => {\n  return axios.get(\"/products\");\n};\n\nconst getProductsByCategory = (category) => {\n  return axios.get(`/products/?category=\"${category}\"`, {\n    cancelToken: source.token,\n  });\n};\n\nconst getProductById = (id) => {\n  return axios.get(`/products/${id}`);\n};\n\nconst getAllIngredients = async () => {\n  return axios.get(`${baseURL}/ingredients`);\n};\nconst createNewIngredients = async (ingredients) => {\n  return axios.post(`${baseURL}/ingredients`, ingredients);\n};\n\nconst postNewProduct = (product) => {\n  return axios.post(`${baseURL}/products`, product);\n};\n\nconst updateProductById = (productId, newProduct) => {\n  return axios.put(`/products/${productId}`, newProduct);\n};\n\nconst deleteProductById = (productId) => {\n  return axios.delete(`/products/${productId}`);\n};\n\n//for Orders\n\n// other\nconst postImage = async (file) => {\n  const data = new FormData();\n  data.append(\"file\", file);\n\n  return axios.post(`${baseURL}/images`, data);\n};\n\n// developers\n\nconst fetchDevs = () => axios.get(\"/developers\");\n\n// Stocks\n\nconst fetchAllStocks = () => axios.get(\"/promo\");\n\nconst sendUserFile = (file) => axios.post(\"/images\", file);\n\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\n\nconst updateExistingStock = (stockId, newStock) =>\n  axios.put(`/promo/${stockId}`, newStock);\n\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\n\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\n\nexport {\n  fetchDevs,\n  getAllIngredients,\n  createNewIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  fetchAllStocks,\n  sendUserFile,\n  sendNewStock,\n  updateExistingStock,\n  deleteExistingStock,\n  getExistingStockById,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminStocksEditor_form__19TNN\",\"formInput\":\"AdminStocksEditor_formInput__3NZ95\",\"title\":\"AdminStocksEditor_title__3jP64\",\"formButton\":\"AdminStocksEditor_formButton__1BAnW\",\"formButtonReset\":\"AdminStocksEditor_formButtonReset__2tiQi\",\"uploadInput\":\"AdminStocksEditor_uploadInput__2DyJ4\",\"fileUpload\":\"AdminStocksEditor_fileUpload__19EWX\",\"fileUploadGreen\":\"AdminStocksEditor_fileUploadGreen__3T-lI AdminStocksEditor_fileUpload__19EWX\",\"uploadLabel\":\"AdminStocksEditor_uploadLabel__1zWV2\",\"uploadSpan\":\"AdminStocksEditor_uploadSpan__1sUgo\",\"fileName\":\"AdminStocksEditor_fileName__tgd29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"AdminStocksListItem_card__aM9qD\",\"descriptionContainer\":\"AdminStocksListItem_descriptionContainer__2FAdq\",\"cardImg\":\"AdminStocksListItem_cardImg__3FKXO\",\"title\":\"AdminStocksListItem_title__10ecY\",\"description\":\"AdminStocksListItem_description__7mLC3\",\"buttonContainer\":\"AdminStocksListItem_buttonContainer__1b6vU\",\"button\":\"AdminStocksListItem_button__3m-xX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardList\":\"AdminStocksList_cardList__2PQHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdminStocksPage_container__2R0ZC\"};","import stocksActions from './stocksActions';\nimport {\n  fetchAllStocks,\n  sendUserFile,\n  sendNewStock,\n  updateExistingStock,\n  deleteExistingStock,\n  getExistingStockById,\n} from '../../services/api';\n\nconst fetchStocks = () => (dispatch) => {\n  dispatch(stocksActions.getStocksRequest());\n\n  fetchAllStocks()\n    .then(({ data }) => dispatch(stocksActions.getStocksSuccess(data.promo)))\n    .catch((error) => dispatch(stocksActions.getStocksError(error)));\n};\n\nconst sendFile = (file) => (dispatch) => {\n  dispatch(stocksActions.sendFileRequest());\n\n  sendUserFile(file)\n    .then(({ data }) =>\n      dispatch(stocksActions.sendFileSuccess(data.image.file))\n    )\n    .catch((error) => dispatch(stocksActions.sendFileError(error)));\n};\n\nconst sendStock = (stock) => (dispatch) => {\n  dispatch(stocksActions.sendStockRequest());\n\n  sendNewStock(stock)\n    .then(({ data }) => dispatch(stocksActions.sendStockSuccess(data.newPromo)))\n    .catch((error) => dispatch(stocksActions.sendStockError(error)));\n};\n\nconst updateStock = (stockId, newStock) => (dispatch) => {\n  dispatch(stocksActions.updateStockRequest());\n\n  updateExistingStock(stockId, newStock)\n    .then(({ data }) =>\n      dispatch(stocksActions.updateStockSuccess(data.updatedPromo))\n    )\n    .catch((error) => dispatch(stocksActions.updateStockError(error)));\n};\n\nconst deleteStock = (stockId) => (dispatch) => {\n  dispatch(stocksActions.deleteStockRequest());\n\n  deleteExistingStock(stockId)\n    .then(({ data }) =>\n      dispatch(stocksActions.deleteStockSuccess(data.deletedPromo._id))\n    )\n    .catch((error) => dispatch(stocksActions.deleteStockError(error)));\n};\n\nconst getStockById = (stockId) => (dispatch) => {\n  dispatch(stocksActions.getStockByIdRequest());\n\n  getExistingStockById(stockId)\n    .then(({ data }) => dispatch(stocksActions.getStockByIdSuccess(data.promo)))\n    .catch((error) => dispatch(stocksActions.getStockByIdError(error)));\n};\n\nexport default {\n  fetchStocks,\n  sendStock,\n  updateStock,\n  deleteStock,\n  sendFile,\n  getStockById,\n};\n","const getStocks = (state) => state.stocks.items;\n\nconst getFileLink = (state) => state.stocks.fileLink;\n\nconst getLoading = (state) => state.stocks.isLoading;\n\nconst getItem = (state) => state.stocks.item;\n\nexport default { getStocks, getFileLink, getLoading, getItem };\n","function getFileName() {\n  let file = document.getElementById('uploadeFile').value;\n\n  file = file.replace(/\\\\/g, '/').split('/').pop();\n\n  document.getElementById('fileName').innerHTML = 'Имя файла: ' + file;\n}\nexport default getFileName;\n","import React, { useState, useEffect } from \"react\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/Spinner\";\nimport Notification from \"../Notification\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  stocksOperations,\n  stocksActions,\n  stocksSelector,\n} from \"../../redux/stocks/\";\n\nimport styles from \"./AdminStocksEditor.module.css\";\nimport getFileName from \"./utils\";\n\nfunction AdminStocksEditor({\n  onSubmitFile,\n  onSubmit,\n  onUpdate,\n  onCancel,\n  isLoading,\n  linkFile,\n  editStock,\n}) {\n  const [showNotification, setShow] = useState(false);\n  useEffect(() => {\n    if (showNotification) {\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    }\n  }, [showNotification]);\n\n  const [stocksFile, setStockFile] = useState(null);\n  const handleLoadFile = ({ target }) => {\n    setShow(true);\n    getFileName();\n    const stocksItem = new FormData();\n    stocksItem.append(\"file\", target.files[0]);\n\n    setMessage(messages.successFile);\n\n    onSubmitFile(stocksItem);\n  };\n\n  const [stocksTitleEn, setStockTitleEn] = useState(\"\");\n\n  const handleChangeTitleEn = ({ target: { value } }) => setStockTitleEn(value);\n\n  const [stocksTitleRu, setStockTitleRu] = useState(\"\");\n  const handleChangeTitleRu = ({ target: { value } }) => setStockTitleRu(value);\n\n  const [stocksTitleUkr, setStockTitleUkr] = useState(\"\");\n  const handleChangeTitleUkr = ({ target: { value } }) =>\n    setStockTitleUkr(value);\n\n  const [stocksDescriptionEn, setStocksDescriptionEn] = useState(\"\");\n  const handleChangeDescriptionEn = ({ target: { value } }) =>\n    setStocksDescriptionEn(value);\n\n  const [stocksDescriptionRu, setStocksDescriptionRu] = useState(\"\");\n  const handleChangeDescriptionRu = ({ target: { value } }) =>\n    setStocksDescriptionRu(value);\n\n  const [stocksDescriptionUkr, setStocksDescriptionUkr] = useState(\"\");\n  const handleChangeDescriptionUkr = ({ target: { value } }) =>\n    setStocksDescriptionUkr(value);\n\n  const [message, setMessage] = useState(null);\n  const messages = {\n    success: \"Акция успешно добавлена\",\n    updated: \"Акция успешно обновлена\",\n    successFile: \"Файл успешно загружен\",\n  };\n\n  const [stock, setStock] = useState(null);\n  useEffect(() => {\n    setStock(editStock);\n    if (editStock) {\n      setStockFile(editStock.images);\n      setStockTitleEn(editStock.title.en);\n      setStocksDescriptionEn(editStock.description.en);\n      setStockTitleRu(editStock.title.ru);\n      setStocksDescriptionRu(editStock.description.ru);\n      setStockTitleUkr(editStock.title.ukr);\n      setStocksDescriptionUkr(editStock.description.ukr);\n    }\n  }, [editStock]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const linkImage = linkFile || stock.images;\n    const newStock = {\n      title: { en: stocksTitleEn, ru: stocksTitleRu, ukr: stocksTitleUkr },\n      description: {\n        en: stocksDescriptionEn,\n        ru: stocksDescriptionRu,\n        ukr: stocksDescriptionUkr,\n      },\n      images: linkImage,\n    };\n\n    if (e.target.name === \"update\") {\n      onUpdate(stock._id, newStock);\n      cancelInput();\n      setMessage(messages.updated);\n      setShow(true);\n      return;\n    }\n    setMessage(messages.success);\n    setShow(true);\n    onSubmit(newStock);\n    cancelInput();\n  };\n\n  const cancelInput = () => {\n    setStockFile(null);\n    setStockTitleEn(\"\");\n    setStocksDescriptionEn(\"\");\n    setStockTitleRu(\"\");\n    setStocksDescriptionRu(\"\");\n    setStockTitleUkr(\"\");\n    setStocksDescriptionUkr(\"\");\n    document.getElementById(\"formStocks\").reset();\n    document.getElementById(\"fileName\").innerHTML = \"\";\n    onCancel();\n  };\n\n  return (\n    <>\n      {showNotification && <Notification message={message} confirm />}\n      {isLoading && <Spinner />}\n\n      <form className={styles.form} id=\"formStocks\">\n        <div className={linkFile ? styles.fileUploadGreen : styles.fileUpload}>\n          <label className={styles.uploadLabel}>\n            <input\n              type=\"file\"\n              name=\"file\"\n              id=\"uploadeFile\"\n              className={styles.uploadInput}\n              onChange={handleLoadFile}\n            />\n            <span className={styles.uploadSpan}>\n              {stocksFile ? (\n                <FormattedMessage id=\"file.uploaded\" />\n              ) : (\n                <FormattedMessage id=\"file.upload\" />\n              )}\n            </span>\n          </label>\n        </div>\n        <div id=\"fileName\" className={styles.fileName}></div>\n        <div>\n          <h2 className={styles.title}>\n            <FormattedMessage id=\"promo.name\" />\n          </h2>\n\n          <input\n            name=\"promoNameEn\"\n            id=\"promoNameEn\"\n            placeholder=\"Promo name on english\"\n            className={styles.formInput}\n            value={stocksTitleEn}\n            onChange={handleChangeTitleEn}\n          />\n\n          <input\n            name=\"promoNameRu\"\n            id=\"promoNameRu\"\n            placeholder=\"Название акции на русском\"\n            className={styles.formInput}\n            value={stocksTitleRu}\n            onChange={handleChangeTitleRu}\n          />\n\n          <input\n            name=\"promoNameUkr\"\n            id=\"promoNameUkr\"\n            placeholder=\"Назва акції українською\"\n            className={styles.formInput}\n            value={stocksTitleUkr}\n            onChange={handleChangeTitleUkr}\n          />\n        </div>\n        <div>\n          <h2 className={styles.title}>\n            <FormattedMessage id=\"promo.about\" />\n          </h2>\n\n          <input\n            name=\"promoDescriptionEn\"\n            id=\"promoDescriptionEn\"\n            placeholder=\"Promo description on english\"\n            className={styles.formInput}\n            value={stocksDescriptionEn}\n            onChange={handleChangeDescriptionEn}\n          />\n\n          <input\n            name=\"promoDescriptionRu\"\n            id=\"promoDescriptionRu\"\n            placeholder=\"Описание акции на русском\"\n            className={styles.formInput}\n            value={stocksDescriptionRu}\n            onChange={handleChangeDescriptionRu}\n          />\n\n          <input\n            name=\"promoDescriptionUkr\"\n            id=\"promoDescriptionUkr\"\n            placeholder=\"Назва акції українською\"\n            className={styles.formInput}\n            value={stocksDescriptionUkr}\n            onChange={handleChangeDescriptionUkr}\n          />\n        </div>\n\n        {linkFile && !editStock && (\n          <button\n            type=\"submit\"\n            name=\"onSubmit\"\n            onClick={handleSubmit}\n            className={styles.formButton}\n          >\n            <FormattedMessage id=\"promo.send\" />\n          </button>\n        )}\n\n        {editStock && (\n          <button\n            type=\"submit\"\n            name=\"update\"\n            onClick={handleSubmit}\n            className={styles.formButton}\n          >\n            <FormattedMessage id=\"promo.refresh\" />\n          </button>\n        )}\n\n        <button\n          type=\"button\"\n          onClick={cancelInput}\n          className={`${styles.formButton} ${styles.formButtonReset}`}\n        >\n          <FormattedMessage id=\"reset form\" />\n        </button>\n      </form>\n    </>\n  );\n}\n\nAdminStocksEditor.propTypes = {\n  onSubmitFile: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  linkFile: PropTypes.string,\n  editStock: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  linkFile: stocksSelector.getFileLink(state),\n  isLoading: stocksSelector.getLoading(state),\n  editStock: stocksSelector.getItem(state),\n});\n\nconst mapDispatchToProps = {\n  onSubmitFile: stocksOperations.sendFile,\n  onSubmit: stocksOperations.sendStock,\n  onCancel: stocksActions.cancelInput,\n  onUpdate: stocksOperations.updateStock,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminStocksEditor);\n","import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport stocksOperation from '../../../redux/stocks/stocksOperations';\nimport styles from './AdminStocksListItem.module.css';\n\nfunction AdminStocksListItem({\n  images,\n  title,\n  description,\n  id,\n  onRemove,\n  onChange,\n}) {\n  const handleClickOnChangeButton = (id) => {\n    window.scrollTo(0, 0);\n    onChange(id);\n  };\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.descriptionContainer}>\n        {/* <img src={images} alt={title} className={styles.cardImg} /> */}\n        <LazyLoadImage\n          className={styles.cardImg}\n          src={images} // use normal <img> attributes as props\n        />\n        <div>\n          <h1 className={styles.title}>{title.en}</h1>\n          <p className={styles.description}>{description.en}</p>\n          <h1 className={styles.title}>{title.ru}</h1>\n          <p className={styles.description}>{description.ru}</p>\n          <h1 className={styles.title}>{title.ukr}</h1>\n          <p className={styles.description}>{description.ukr}</p>\n        </div>\n      </div>\n      <div className={styles.buttonContainer}>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={() => onRemove(id)}\n        >\n          <FormattedMessage id=\"promo.delete\" />\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={() => handleClickOnChangeButton(id)}\n        >\n          <FormattedMessage id=\"promo.change\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nAdminStocksListItem.propTypes = {\n  images: PropTypes.string.isRequired,\n  title: PropTypes.object.isRequired,\n  description: PropTypes.object.isRequired,\n  id: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onRemove: stocksOperation.deleteStock,\n  onChange: stocksOperation.getStockById,\n};\n\nexport default connect(null, mapDispatchToProps)(AdminStocksListItem);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AdminStockListItem from './AdminStockListItem';\nimport stocksOperations from '../../redux/stocks/stocksOperations';\nimport stocksSelector from '../../redux/stocks/stocksSelector';\nimport styles from './AdminStocksList.module.css';\n\nfunction AdminStocksList({ elements, onFetchStocks }) {\n  useEffect(() => {\n    onFetchStocks();\n  }, [onFetchStocks]);\n\n  return (\n    elements && (\n      <div className={styles.cardList}>\n        {elements.map(({ title, description, images, _id }) => (\n          <AdminStockListItem\n            key={_id}\n            title={title}\n            description={description}\n            images={images}\n            id={_id}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nAdminStocksList.propTypes = {\n  elements: PropTypes.arrayOf(PropTypes.object),\n  onFetchStocks: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  elements: stocksSelector.getStocks(state),\n});\n\nconst mapDispatchToProps = {\n  onFetchStocks: stocksOperations.fetchStocks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminStocksList);\n","import React from 'react';\nimport AdminStocksEditor from '../../components/AdminStocksEditor';\nimport AdminStocksList from '../../components/AdminStocksList';\nimport styles from './AdminStocksPage.module.css';\n\nexport default function AdminStocksPage() {\n  return (\n    <div className={styles.container}>\n      <AdminStocksEditor />\n      <AdminStocksList />\n    </div>\n  );\n}\n"],"sourceRoot":""}