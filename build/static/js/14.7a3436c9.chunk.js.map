{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","redux/product/index.js","components/AdminUpdateListItem/adminUpdateListItem.module.css","components/AdminUpdateList/AdminUpdateList.module.css","components/AdminUpdateListItem/AdminUpdateListItem.js","components/AdminUpdateList/AdminUpdateList.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","AdminUpdateListItem","local","useSelector","lang","name","images","className","style","editCard","src","alt","editCard__image","editForm__name","to","pathname","type","editForm__btn","defaultProps","categories","subcategories","price","filteredProducts","typesOfLists","AdminOrderList","useDispatch","productSelectors","isLoading","useState","listType","setListType","filterProductsBy","setFilterProductsBy","useEffect","productOperations","filter","toLowerCase","includes","Spinner","styles","buttons_container","map","key","button","button_active","onClick","changeCategorie","page_container","value","placeholder","languages","search","input","onChange","target","items_container","_id"],"mappings":"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","file":"static/js/14.7a3436c9.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\n\nconst getError = (state) => state.products.errorReducer;\n\nconst getProducts = (state) => state.products.items;\n\nconst getFileLink = (state) => state.products.fileLink;\n\nconst getIngredients = (state) => state.products.ingredients;\n\nconst createNewIngredient = (state) => state.products.newIngredient;\n\nconst addIngredient = (state) => state.products.ingredient;\n\nexport default {\n  getLoading,\n  getError,\n  getProducts,\n  getFileLink,\n  getIngredients,\n  createNewIngredient,\n  addIngredient,\n};\n","import productActions from \"./productActions\";\nimport {\n  getAllIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  createNewIngredients,\n} from \"../../services/api\";\n\nconst fetchProducts = () => (dispatch) => {\n  dispatch(productActions.productsRequest());\n\n  getAllProducts()\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\n    .catch((error) => dispatch(productActions.productsError(error)));\n};\n\nconst fetchProductsByCategory = (category) => (dispatch) => {\n  dispatch(productActions.byCategoryRequest());\n\n  getProductsByCategory(category)\n    .then(({ data }) =>\n      dispatch(productActions.byCategorySuccess(data.products))\n    )\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\n};\n\nconst fetchProductById = (id) => (dispatch) => {\n  dispatch(productActions.byIdRequest());\n\n  getProductById(id)\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\n    .catch((error) => dispatch(productActions.byIdError(error)));\n};\n\n//for AdminPage\nconst sendFile = (file) => (dispatch) => {\n  dispatch(productActions.sendFileRequest());\n\n  postImage(file)\n    .then(({ data }) =>\n      dispatch(productActions.sendFileSuccess(data.image.file))\n    )\n    .catch((error) => dispatch(productActions.sendFileError(error)));\n};\n\nconst sendProduct = (product) => (dispatch) => {\n  dispatch(productActions.sendProductRequest());\n\n  postNewProduct(product)\n    .then(({ data }) => {\n      dispatch(productActions.sendProductSuccess(data.product));\n      dispatch(productActions.clearFile());\n    })\n    //проверить что приходит в data\n    .catch((error) => dispatch(productActions.sendProductError(error)));\n};\n\nconst getIngredients = () => (dispatch) => {\n  dispatch(productActions.getAllIngredientsRequest());\n\n  getAllIngredients()\n    .then(({ data }) =>\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\n    )\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\n};\nconst createNewIngredient = (ingredient) => (dispatch) => {\n  dispatch(productActions.createNewIngredientsRequest());\n\n  createNewIngredients(ingredient)\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\n    .catch((error) =>\n      dispatch(productActions.createNewIngredientsError(error))\n    );\n};\n\nconst updateProduct = (productId, newProduct) => (dispatch) => {\n  dispatch(productActions.updateProductRequest());\n\n  updateProductById(productId, newProduct)\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\n    .catch((error) => dispatch(productActions.updateProductError(error)));\n};\n\nconst deleteProduct = (productId) => (dispatch) => {\n  dispatch(productActions.deleteProductRequest());\n\n  deleteProductById(productId)\n    .then(\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\n      //проверить что приходит в data\n    )\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\n};\n\nexport default {\n  fetchProducts,\n  fetchProductsByCategory,\n  fetchProductById,\n\n  sendFile,\n  sendProduct,\n  getIngredients,\n  updateProduct,\n  deleteProduct,\n  createNewIngredient,\n};\n","import axios from \"axios\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\n\n//for Products\nconst getAllProducts = () => {\n  return axios.get(\"/products\");\n};\n\nconst getProductsByCategory = (category) => {\n  return axios.get(`/products/?category=\"${category}\"`, {\n    cancelToken: source.token,\n  });\n};\n\nconst getProductById = (id) => {\n  return axios.get(`/products/${id}`);\n};\n\nconst getAllIngredients = async () => {\n  return axios.get(`${baseURL}/ingredients`);\n};\nconst createNewIngredients = async (ingredients) => {\n  return axios.post(`${baseURL}/ingredients`, ingredients);\n};\n\nconst postNewProduct = (product) => {\n  return axios.post(`${baseURL}/products`, product);\n};\n\nconst updateProductById = (productId, newProduct) => {\n  return axios.put(`/products/${productId}`, newProduct);\n};\n\nconst deleteProductById = (productId) => {\n  return axios.delete(`/products/${productId}`);\n};\n\n//for Orders\n\n// other\nconst postImage = async (file) => {\n  const data = new FormData();\n  data.append(\"file\", file);\n\n  return axios.post(`${baseURL}/images`, data);\n};\n\n// developers\n\nconst fetchDevs = () => axios.get(\"/developers\");\n\n// Stocks\n\nconst fetchAllStocks = () => axios.get(\"/promo\");\n\nconst sendUserFile = (file) => axios.post(\"/images\", file);\n\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\n\nconst updateExistingStock = (stockId, newStock) =>\n  axios.put(`/promo/${stockId}`, newStock);\n\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\n\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\n\nexport {\n  fetchDevs,\n  getAllIngredients,\n  createNewIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  fetchAllStocks,\n  sendUserFile,\n  sendNewStock,\n  updateExistingStock,\n  deleteExistingStock,\n  getExistingStockById,\n};\n","export { default as productActions } from \"./productActions\";\nexport { default as productOperations } from \"./productOperations\";\nexport { default as productSelectors } from \"./productSelectors\";\nexport { default as productReducer } from \"./productReducer\";\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editCard\":\"adminUpdateListItem_editCard__x8nWP\",\"editCard__image\":\"adminUpdateListItem_editCard__image__2bZQ6\",\"editForm__name\":\"adminUpdateListItem_editForm__name__2ajcO\",\"editForm__btn\":\"adminUpdateListItem_editForm__btn__2gTDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"AdminUpdateList_page_container__suPUY\",\"buttons_container\":\"AdminUpdateList_buttons_container__8TIAe\",\"button\":\"AdminUpdateList_button__zu0FX\",\"button_active\":\"AdminUpdateList_button_active__31rQ-\",\"input\":\"AdminUpdateList_input__91ht3\",\"items_container\":\"AdminUpdateList_items_container__3b0sP\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport style from \"./adminUpdateListItem.module.css\";\n\nconst AdminUpdateListItem = ({ product }) => {\n  const local = useSelector((state) => state.local.lang);\n  const { name, images } = product;\n  return (\n    <div className={style.editCard}>\n      <img src={images} alt={images} className={style.editCard__image} />\n      <p className={style.editForm__name}>{name[local]}</p>\n      <Link to={{ pathname: \"/admin/update-product-item\", state: { product } }}>\n        <button type=\"button\" className={style.editForm__btn}>\n          <FormattedMessage id=\"edit\" />\n        </button>\n      </Link>\n    </div>\n  );\n};\nAdminUpdateListItem.propTypes = {\n  categories: PropTypes.string.isRequired,\n  subcategories: PropTypes.string.isRequired,\n  images: PropTypes.string.isRequired,\n  ingredients: PropTypes.array.isRequired,\n  name: PropTypes.object.isRequired,\n  price: PropTypes.object.isRequired,\n};\nAdminUpdateListItem.defaultProps = {\n  categories: \"\",\n  subcategories: \"\",\n  images: \"\",\n  ingredients: [],\n  name: {},\n  price: {},\n};\nexport default AdminUpdateListItem;\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { productOperations, productSelectors } from \"../../redux/product\";\r\nimport AdminUpdateListItem from \"../AdminUpdateListItem/AdminUpdateListItem\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport styles from \"./AdminUpdateList.module.css\";\r\nimport languages from \"../../languages\";\r\n\r\nlet filteredProducts;\r\nconst typesOfLists = [\"pizza\", \"sides\", \"drinks\", \"desserts\"];\r\n\r\nexport default function AdminOrderList() {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const products = useSelector(productSelectors.getProducts);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n\r\n  const [listType, setListType] = useState(\"pizza\");\r\n  const [filterProductsBy, setFilterProductsBy] = useState(\"\");\r\n\r\n  useEffect(() => dispatch(productOperations.fetchProducts()), [dispatch]);\r\n  if (products) {\r\n    filteredProducts = products\r\n      .filter(({ categories }) => categories === listType)\r\n      .filter(({ name }) =>\r\n        name[local].toLowerCase().includes(filterProductsBy.toLowerCase())\r\n      );\r\n  }\r\n  const changeCategorie = (type) => {\r\n    if (type === listType) {\r\n      return;\r\n    }\r\n    setFilterProductsBy(\"\");\r\n    setListType(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      <div className={styles.buttons_container}>\r\n        {typesOfLists.map((type) => (\r\n          <button\r\n            key={type}\r\n            className={`${styles.button} ${\r\n              listType === type ? styles.button_active : \"\"\r\n            }`}\r\n            onClick={() => changeCategorie(type)}\r\n          >\r\n            <FormattedMessage id={type} />\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <section className={styles.page_container}>\r\n        <input\r\n          type=\"text\"\r\n          value={filterProductsBy}\r\n          placeholder={languages[local].search}\r\n          className={styles.input}\r\n          onChange={({ target: { value } }) => setFilterProductsBy(value)}\r\n        />\r\n        <div className={styles.items_container}>\r\n          {filteredProducts.map((product) => (\r\n            <AdminUpdateListItem key={product._id} product={product} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}