{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","redux/product/index.js","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/confirmationWindow.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/AddNewIngredient.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/addNewIngredient.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/IngredientSelect.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ingredientSelect.module.css","components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/CreateNewProduct/CreateNewProduct.module.css","services/toUpperCaseFirstLetter.js","components/CreateNewProduct/CreateNewProduct.jsx"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","ConfirmationWindow","massage","errorMassage","useSelector","productSelectors","fromCreateNewProduct","useLocation","pathname","className","style","confirmation","data-confirm","confirmation__form","confirmation__formText","to","confirmation__formBtnLink","type","confirmation__formBtn","props","name","module","exports","AddNewIngredient","useDispatch","useState","isShow","setIsShow","setMassage","newIngredientRu","setCreateNewIngredientRu","newIngredientUkr","setCreateNewIngredientUkr","newIngredientEn","setCreateNewIngredientEn","editForm__newIngredient","editCard__title","editCard__titleName","editCard__titleLang","value","onChange","ev","target","editForm__inputLang","minLength","maxLength","required","onClick","length","ru","en","ukr","productOperations","editForm__addNewIngredientBtn","IngredientSelect","productForEdit","local","lang","ingredientsList","ingredientsSelectList","map","el","idx","label","setNewIngredient","setIngredients","useEffect","deleteIngredient","delElemIndex","findIndex","_id","currentTarget","dataset","newIngredientsList","splice","discriptionTitle","editForm__ingredients","key","editForm__ingredient","editForm__ingredientName","data-id","editForm__ingredientBtnDel","width","height","viewBox","fill","editForm__ingredientBtnDelImage","d","editForm__ingredientsSelect","options","editForm__ingredientsList","theme","borderRadius","colors","primary25","primary","some","editForm__addIngredientBtn","toUpperCaseFirstLetter","string","charAt","toUpperCase","slice","CreateNewProduct","categories","languages","pizza","drinks","sides","desserts","pizzaCategories","changeCategory","subCategory","changeSubCategory","ukrName","setUkrName","enName","setEnName","ruName","setRuName","price","setPrice","M","setM","L","setL","XL","setXL","description","setDescription","BtnCreateIngrad","setBtnCreateIngrad","messagNoChoosIngrad","setMessagNoChoosIngrad","createSucces","setCreateSucces","setError","isLoading","hasError","imagesInit","submitForm","e","persist","preventDefault","currency","images","subcategory","Math","trunc","styles","createContainer","Spinner","Notification","message","confirm","onSubmit","applyForm","title","select","classNamePrefix","reactSelect","isDisabled","editCard__titleName_price","min","max","step","editForm__inputLang_price","inputLabel","descriptionInput","src","alt","photoImg","btn","btnInner","files","inputImg","accept","inputCreatIng"],"mappings":"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","file":"static/js/6.55e17b9f.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\n\nconst getError = (state) => state.products.errorReducer;\n\nconst getProducts = (state) => state.products.items;\n\nconst getFileLink = (state) => state.products.fileLink;\n\nconst getIngredients = (state) => state.products.ingredients;\n\nconst createNewIngredient = (state) => state.products.newIngredient;\n\nconst addIngredient = (state) => state.products.ingredient;\n\nexport default {\n  getLoading,\n  getError,\n  getProducts,\n  getFileLink,\n  getIngredients,\n  createNewIngredient,\n  addIngredient,\n};\n","import productActions from \"./productActions\";\nimport {\n  getAllIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  createNewIngredients,\n} from \"../../services/api\";\n\nconst fetchProducts = () => (dispatch) => {\n  dispatch(productActions.productsRequest());\n\n  getAllProducts()\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\n    .catch((error) => dispatch(productActions.productsError(error)));\n};\n\nconst fetchProductsByCategory = (category) => (dispatch) => {\n  dispatch(productActions.byCategoryRequest());\n\n  getProductsByCategory(category)\n    .then(({ data }) =>\n      dispatch(productActions.byCategorySuccess(data.products))\n    )\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\n};\n\nconst fetchProductById = (id) => (dispatch) => {\n  dispatch(productActions.byIdRequest());\n\n  getProductById(id)\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\n    .catch((error) => dispatch(productActions.byIdError(error)));\n};\n\n//for AdminPage\nconst sendFile = (file) => (dispatch) => {\n  dispatch(productActions.sendFileRequest());\n\n  postImage(file)\n    .then(({ data }) =>\n      dispatch(productActions.sendFileSuccess(data.image.file))\n    )\n    .catch((error) => dispatch(productActions.sendFileError(error)));\n};\n\nconst sendProduct = (product) => (dispatch) => {\n  dispatch(productActions.sendProductRequest());\n\n  postNewProduct(product)\n    .then(({ data }) => {\n      dispatch(productActions.sendProductSuccess(data.product));\n      dispatch(productActions.clearFile());\n    })\n    //проверить что приходит в data\n    .catch((error) => dispatch(productActions.sendProductError(error)));\n};\n\nconst getIngredients = () => (dispatch) => {\n  dispatch(productActions.getAllIngredientsRequest());\n\n  getAllIngredients()\n    .then(({ data }) =>\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\n    )\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\n};\nconst createNewIngredient = (ingredient) => (dispatch) => {\n  dispatch(productActions.createNewIngredientsRequest());\n\n  createNewIngredients(ingredient)\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\n    .catch((error) =>\n      dispatch(productActions.createNewIngredientsError(error))\n    );\n};\n\nconst updateProduct = (productId, newProduct) => (dispatch) => {\n  dispatch(productActions.updateProductRequest());\n\n  updateProductById(productId, newProduct)\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\n    .catch((error) => dispatch(productActions.updateProductError(error)));\n};\n\nconst deleteProduct = (productId) => (dispatch) => {\n  dispatch(productActions.deleteProductRequest());\n\n  deleteProductById(productId)\n    .then(\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\n      //проверить что приходит в data\n    )\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\n};\n\nexport default {\n  fetchProducts,\n  fetchProductsByCategory,\n  fetchProductById,\n\n  sendFile,\n  sendProduct,\n  getIngredients,\n  updateProduct,\n  deleteProduct,\n  createNewIngredient,\n};\n","import axios from \"axios\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\n\n//for Products\nconst getAllProducts = () => {\n  return axios.get(\"/products\");\n};\n\nconst getProductsByCategory = (category) => {\n  return axios.get(`/products/?category=\"${category}\"`, {\n    cancelToken: source.token,\n  });\n};\n\nconst getProductById = (id) => {\n  return axios.get(`/products/${id}`);\n};\n\nconst getAllIngredients = async () => {\n  return axios.get(`${baseURL}/ingredients`);\n};\nconst createNewIngredients = async (ingredients) => {\n  return axios.post(`${baseURL}/ingredients`, ingredients);\n};\n\nconst postNewProduct = (product) => {\n  return axios.post(`${baseURL}/products`, product);\n};\n\nconst updateProductById = (productId, newProduct) => {\n  return axios.put(`/products/${productId}`, newProduct);\n};\n\nconst deleteProductById = (productId) => {\n  return axios.delete(`/products/${productId}`);\n};\n\n//for Orders\n\n// other\nconst postImage = async (file) => {\n  const data = new FormData();\n  data.append(\"file\", file);\n\n  return axios.post(`${baseURL}/images`, data);\n};\n\n// developers\n\nconst fetchDevs = () => axios.get(\"/developers\");\n\n// Stocks\n\nconst fetchAllStocks = () => axios.get(\"/promo\");\n\nconst sendUserFile = (file) => axios.post(\"/images\", file);\n\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\n\nconst updateExistingStock = (stockId, newStock) =>\n  axios.put(`/promo/${stockId}`, newStock);\n\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\n\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\n\nexport {\n  fetchDevs,\n  getAllIngredients,\n  createNewIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  fetchAllStocks,\n  sendUserFile,\n  sendNewStock,\n  updateExistingStock,\n  deleteExistingStock,\n  getExistingStockById,\n};\n","export { default as productActions } from \"./productActions\";\nexport { default as productOperations } from \"./productOperations\";\nexport { default as productSelectors } from \"./productSelectors\";\nexport { default as productReducer } from \"./productReducer\";\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport productSelectors from \"../../../redux/product/productSelectors\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useLocation } from \"react-router-dom\";\nimport style from \"./confirmationWindow.module.css\";\n\nconst ConfirmationWindow = ({ massage }) => {\n  const errorMassage = useSelector(productSelectors.getError);\n  if (errorMassage) {\n    massage = errorMassage;\n  }\n  const location = useLocation();\n  let fromCreateNewProduct = location.pathname === \"/admin/create-product\";\n\n  return (\n    <div className={style.confirmation} data-confirm=\"continue\">\n      <div className={style.confirmation__form}>\n        <p className={style.confirmation__formText}>{massage}</p>\n        {!fromCreateNewProduct && (\n          <Link\n            to=\"/admin/update-product\"\n            className={style.confirmation__formBtnLink}\n          >\n            <button type=\"button\" className={style.confirmation__formBtn}>\n              <FormattedMessage id=\"update.return\" />\n            </button>\n          </Link>\n        )}\n        {massage.props.id === \"deleted product\" || (\n          <button\n            type=\"button\"\n            className={style.confirmation__formBtn}\n            name=\"continue\"\n          >\n            <FormattedMessage id=\"continue editing\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationWindow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmation\":\"confirmationWindow_confirmation__3AN5I\",\"confirmation__form\":\"confirmationWindow_confirmation__form__1Kt2s\",\"confirmation__formText\":\"confirmationWindow_confirmation__formText__2xTMf\",\"confirmation__formBtnLink\":\"confirmationWindow_confirmation__formBtnLink__3g0sE\",\"confirmation__formBtn\":\"confirmationWindow_confirmation__formBtn__HyuL7\"};","import React, { useState } from \"react\";\nimport style from \"./addNewIngredient.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport productOperations from \"../../../redux/product/productOperations\";\nimport ConfirmationWindow from \"./ConfirmationWindow\";\n\nconst AddNewIngredient = () => {\n  const dispatch = useDispatch();\n  const [isShow, setIsShow] = useState(false);\n  const [massage, setMassage] = useState(\"\");\n  const [newIngredientRu, setCreateNewIngredientRu] = useState(\"\");\n  const [newIngredientUkr, setCreateNewIngredientUkr] = useState(\"\");\n  const [newIngredientEn, setCreateNewIngredientEn] = useState(\"\");\n  const createIngredient = () => {\n    if (\n      newIngredientEn.length >= 3 &&\n      newIngredientRu.length >= 3 &&\n      newIngredientUkr.length >= 3\n    ) {\n      const newIngredient = {\n        name: {\n          ru: newIngredientRu,\n          en: newIngredientEn,\n          ukr: newIngredientUkr,\n        },\n      };\n      dispatch(productOperations.createNewIngredient(newIngredient));\n      setMassage(<FormattedMessage id=\"update.ingredientAdded\" />);\n    } else {\n      setMassage(<FormattedMessage id=\"update.errorValidationName\" />);\n    }\n    setIsShow(true);\n  };\n  return (\n    <>\n      <label className={style.editForm__newIngredient}>\n        <h4 className={style.editCard__title}>\n          <FormattedMessage id=\"update.createNewIngredient\" />\n        </h4>\n        <div className={style.editCard__titleName}>\n          <p className={style.editCard__titleLang}>ru</p>\n          <input\n            type=\"text\"\n            value={newIngredientRu}\n            onChange={(ev) => setCreateNewIngredientRu(ev.target.value)}\n            className={style.editForm__inputLang}\n            minLength=\"3\"\n            maxLength=\"30\"\n            required\n          />\n          <p className={style.editCard__titleLang}>en</p>\n          <input\n            type=\"text\"\n            value={newIngredientEn}\n            onChange={(ev) => setCreateNewIngredientEn(ev.target.value)}\n            className={style.editForm__inputLang}\n            minLength=\"3\"\n            maxLength=\"30\"\n            required\n          />\n          <p className={style.editCard__titleLang}>ukr</p>\n          <input\n            type=\"text\"\n            value={newIngredientUkr}\n            onChange={(ev) => setCreateNewIngredientUkr(ev.target.value)}\n            className={style.editForm__inputLang}\n            minLength=\"3\"\n            maxLength=\"30\"\n            required\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={createIngredient}\n          className={style.editForm__addNewIngredientBtn}\n        >\n          <FormattedMessage id=\"update.addNewIngredient\" />\n        </button>\n      </label>\n      <div\n        onClick={(ev) => {\n          setIsShow(false);\n          ev.target.name =\n            \"continue\" && dispatch(productOperations.getIngredients());\n        }}\n      >\n        {isShow && massage && <ConfirmationWindow massage={massage} />}\n      </div>\n    </>\n  );\n};\n\nexport default AddNewIngredient;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editForm__newIngredient\":\"addNewIngredient_editForm__newIngredient__2yuFr\",\"editCard__title\":\"addNewIngredient_editCard__title__14-Xb\",\"editForm__inputNewIngredient\":\"addNewIngredient_editForm__inputNewIngredient__Cmx_u\",\"editForm__inputLang\":\"addNewIngredient_editForm__inputLang__1aNDC\",\"editForm__addNewIngredientBtn\":\"addNewIngredient_editForm__addNewIngredientBtn__3MUlw\",\"editCard__titleName\":\"addNewIngredient_editCard__titleName__TAhik\"};","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Select from \"react-select\";\nimport productSelectors from \"../../../redux/product/productSelectors\";\nimport productActions from \"../../../redux/product/productActions.js\";\nimport style from \"./ingredientSelect.module.css\";\n\nconst IngredientSelect = ({ productForEdit = {} }) => {\n  const dispatch = useDispatch();\n  const local = useSelector(state => state.local.lang);\n  const ingredientsList = useSelector(productSelectors.getIngredients);\n  const ingredientsSelectList = ingredientsList.map((el, idx) => ({\n    label: el.name[local],\n    value: idx\n  }));\n  const [newIngredient, setNewIngredient] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\n    productForEdit.ingredients || []\n  );\n\n  useEffect(() => {\n    dispatch(dispatch => dispatch(productActions.addIngredient(ingredients)));\n  }, [ingredients]); // eslint-disable-line\n  useEffect(() => {\n    setNewIngredient(ingredientsSelectList[0]);\n  }, [ingredientsList]); // eslint-disable-line\n\n  useEffect(() => {\n    setNewIngredient(ingredientsSelectList[newIngredient.value]);\n  }, [local]); // eslint-disable-line\n\n  const addIngredient = () => {\n    ingredients.some(\n      el => ingredientsList[newIngredient.value]._id === el._id\n    ) ||\n      setIngredients(ingredients => [\n        ...ingredients,\n        ingredientsList[newIngredient.value]\n      ]);\n  };\n  const deleteIngredient = ev => {\n    const delElemIndex = ingredients.findIndex(\n      el => el._id === ev.currentTarget.dataset.id\n    );\n    const newIngredientsList = [...ingredients];\n    newIngredientsList.splice(delElemIndex, 1);\n    setIngredients(newIngredientsList);\n  };\n\n  return (\n    <>\n      <h4 className={style.editCard__title}>\n        <FormattedMessage id=\"update.composition\" />\n      </h4>\n      <span className={style.discriptionTitle}>\n        <FormattedMessage id=\"update.compositionDiscription\" />\n      </span>\n      <ul className={style.editForm__ingredients}>\n        {ingredients.map((el, idx) => (\n          <li key={el._id} className={style.editForm__ingredient}>\n            <span className={style.editForm__ingredientName}>\n              {el.name[local]}\n            </span>\n            <button\n              type=\"button\"\n              onClick={deleteIngredient}\n              data-id={el._id}\n              className={style.editForm__ingredientBtnDel}\n            >\n              <svg\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n                fill=\"none\"\n                className={style.editForm__ingredientBtnDelImage}\n              >\n                <path\n                  d=\"M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z\"\n                  fill=\"#ffff\"\n                ></path>\n              </svg>\n            </button>\n          </li>\n        ))}\n      </ul>\n      <label className={style.editForm__ingredientsSelect}>\n        <Select\n          options={ingredientsSelectList}\n          value={newIngredient}\n          onChange={ev => setNewIngredient(ev)}\n          className={style.editForm__ingredientsList}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary25: \"white\",\n              primary: \"#ff6c00\"\n            }\n          })}\n        />\n        <button\n          type=\"button\"\n          onClick={addIngredient}\n          className={style.editForm__addIngredientBtn}\n        >\n          <FormattedMessage id=\"update.addToComposition\" />\n        </button>\n      </label>\n    </>\n  );\n};\n\nexport default IngredientSelect;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../../stylesheet/vars.css'\",\"lightColor\":\"#FFF\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"primaryTextFontSize\":\"0.875 rem\",\"editCard__title\":\"ingredientSelect_editCard__title__3a7-F\",\"discriptionTitle\":\"ingredientSelect_discriptionTitle__1Zlc_\",\"editForm__ingredientsSelect\":\"ingredientSelect_editForm__ingredientsSelect__2rx3o\",\"editForm__ingredients\":\"ingredientSelect_editForm__ingredients__2uAki\",\"editForm__ingredient\":\"ingredientSelect_editForm__ingredient__2OJYt\",\"editForm__ingredientName\":\"ingredientSelect_editForm__ingredientName__1sKcv\",\"editForm__ingredientsList\":\"ingredientSelect_editForm__ingredientsList__1roaP\",\"editForm__addIngredientBtn\":\"ingredientSelect_editForm__addIngredientBtn__1ySxs\",\"editForm__ingredientBtnDel\":\"ingredientSelect_editForm__ingredientBtnDel__14iE1\",\"editForm__ingredientBtnDelImage\":\"ingredientSelect_editForm__ingredientBtnDelImage__384I4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__1oiZ8\",\"editCard\":\"adminUpdateListItemEdit_editCard__3URX9\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__zWblm\",\"editForm\":\"adminUpdateListItemEdit_editForm__1LcAs\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__25iEy\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__F7BZd\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__1z1FY\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__1iQ3Q\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__2CUSJ\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo___3F08\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__nEePQ\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__1JmHY\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__VzkMX\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__1TM5K\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__3Q61q\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__13Yi0\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__2zXrU\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__1Qvhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createContainer\":\"CreateNewProduct_createContainer__1vG2V\",\"applyForm\":\"CreateNewProduct_applyForm__3-aGf\",\"ingredientsContainer\":\"CreateNewProduct_ingredientsContainer__s_qpb\",\"ingredient\":\"CreateNewProduct_ingredient__3BnEN\",\"select\":\"CreateNewProduct_select__3AUQh\",\"select__value-control\":\"CreateNewProduct_select__value-control__WEGrO\",\"select__option\":\"CreateNewProduct_select__option__MUL0H\",\"inputLabel\":\"CreateNewProduct_inputLabel__1wknH\",\"editCard__titleName\":\"CreateNewProduct_editCard__titleName__3xOwG\",\"editCard__titleName_price\":\"CreateNewProduct_editCard__titleName_price__3vsnX\",\"title\":\"CreateNewProduct_title__2mRjJ\",\"editForm__inputLang\":\"CreateNewProduct_editForm__inputLang__t1A3f\",\"btn\":\"CreateNewProduct_btn__3cW40\",\"inputImg\":\"CreateNewProduct_inputImg__2TUPJ\",\"inputCreatIng\":\"CreateNewProduct_inputCreatIng__33vXj\",\"btnInner\":\"CreateNewProduct_btnInner__32UaT\",\"photoImg\":\"CreateNewProduct_photoImg__3L0ON\",\"checkbox\":\"CreateNewProduct_checkbox__ynemT\",\"descriptionInput\":\"CreateNewProduct_descriptionInput__39dPm\",\"editForm__inputLang_price\":\"CreateNewProduct_editForm__inputLang_price__2zG1F\"};","export default function toUpperCaseFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./CreateNewProduct.module.css\";\nimport Select from \"react-select\";\nimport {\n  productSelectors,\n  productOperations,\n  productActions,\n} from \"../../redux/product\";\nimport Notification from \"../Notification\";\nimport { FormattedMessage } from \"react-intl\";\nimport AddNewIngredient from \"../AdminUpdateListItemEdit/AdminUpdateListItemElems/AddNewIngredient\";\nimport IngredientSelect from \"../AdminUpdateListItemEdit/AdminUpdateListItemElems/IngredientSelect\";\n\nimport languages from \"../../languages\";\nimport style from \"../AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css\";\nimport Spinner from \"../Spinner\";\nimport toUpperCaseFirstLetter from \"../../services/toUpperCaseFirstLetter\";\n\nconst CreateNewProduct = () => {\n  const local = useSelector((state) => state.local.lang);\n  const categories = {\n    pizza: \"pizza\",\n    drinks: \"drinks\",\n    sides: \"sides\",\n    desserts: \"desserts\",\n  };\n\n  const options = [\n    { id: 0, value: categories.pizza, label: languages[local].pizza },\n    { id: 1, value: categories.drinks, label: languages[local].drinks },\n    { id: 2, value: categories.sides, label: languages[local].sides },\n    { id: 3, value: categories.desserts, label: languages[local].desserts },\n  ];\n\n  const pizzaCategories = [\n    { id: 0, value: \"classic\", label: languages[local][\"pizza.classic\"] },\n    { id: 1, value: \"branded\", label: languages[local][\"pizza.special\"] },\n    { id: 2, value: \"premium\", label: languages[local][\"pizza.premium\"] },\n  ];\n\n  const [category, changeCategory] = useState(options[0]);\n  const [subCategory, changeSubCategory] = useState(pizzaCategories[0]);\n  const [ukrName, setUkrName] = useState(\"\");\n  const [enName, setEnName] = useState(\"\");\n  const [ruName, setRuName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [M, setM] = useState(\"\");\n  const [L, setL] = useState(\"\");\n  const [XL, setXL] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [BtnCreateIngrad, setBtnCreateIngrad] = useState(false);\n  const [messagNoChoosIngrad, setMessagNoChoosIngrad] = useState(false);\n  const [createSucces, setCreateSucces] = useState(false);\n  const [error, setError] = useState(false);\n\n  const isLoading = useSelector(productSelectors.getLoading);\n  const hasError = useSelector(productSelectors.getError);\n  const fileLink = useSelector(productSelectors.getFileLink);\n  const ingredients = useSelector(productSelectors.addIngredient);\n  const dispatch = useDispatch();\n  const postNewProduct = (product) =>\n    dispatch(productOperations.sendProduct(product));\n\n  const clearFields = () => {\n    changeCategory(options[0]);\n    changeSubCategory(pizzaCategories[0]);\n    setUkrName(\"\");\n    setEnName(\"\");\n    setRuName(\"\");\n    setPrice(\"\");\n    setM(\"\");\n    setL(\"\");\n    setXL(\"\");\n    setDescription(\"\");\n  };\n\n  useEffect(() => {\n    dispatch(productOperations.getIngredients());\n  }, [dispatch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(productActions.clearFile());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(dispatch(productActions.imagesInit(null)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    changeCategory(options[category.id]);\n    changeSubCategory(pizzaCategories[subCategory.id]);\n  }, [local]); // eslint-disable-line\n\n  const submitForm = async (e) => {\n    e.persist();\n    e.preventDefault();\n    setError(false);\n    setCreateSucces(false);\n    const product = {\n      categories: category.value,\n      currency: \"грн\",\n      images: fileLink,\n      name: {\n        ukr: toUpperCaseFirstLetter(ukrName),\n        en: toUpperCaseFirstLetter(enName),\n        ru: toUpperCaseFirstLetter(ruName),\n      },\n    };\n    if (category.value === categories.pizza) {\n      if (ingredients.length === 0) {\n        return setMessagNoChoosIngrad(true);\n      }\n      product.ingredients = ingredients;\n      product.subcategory = subCategory.value;\n      product.price = {\n        M: Math.trunc(M),\n        L: Math.trunc(L),\n        XL: Math.trunc(XL),\n      };\n    } else {\n      product.price = { price: Math.trunc(price) };\n      product.description = description;\n    }\n\n    if (!fileLink) {\n      return setError(true);\n    }\n    postNewProduct(product);\n    setCreateSucces(true);\n    clearFields();\n  };\n\n  return (\n    <div className={styles.createContainer}>\n      {isLoading && <Spinner />}\n      {hasError || (error && <Notification message={languages[local].error} />)}\n      {messagNoChoosIngrad && (\n        <Notification message={languages[local][\"update.addIngredient\"]} />\n      )}\n      {createSucces && (\n        <Notification message={languages[local][\"product.created\"]} confirm />\n      )}\n      <form onSubmit={(e) => submitForm(e)} className={styles.applyForm}>\n        <p className={styles.title}>\n          <FormattedMessage id=\"product.category\" />\n        </p>\n        <Select\n          className={styles.select}\n          classNamePrefix={styles.reactSelect}\n          value={category}\n          onChange={changeCategory}\n          options={options}\n          theme={(theme) => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary25: \"white\",\n              primary: \"#ff6c00\",\n            },\n          })}\n        />\n        {category.value === categories.pizza && (\n          <>\n            <p className={styles.title}>\n              <FormattedMessage id=\"product.subcategory\" />\n            </p>\n            <Select\n              className={styles.select}\n              value={category.value === categories.pizza ? subCategory : null}\n              onChange={changeSubCategory}\n              options={pizzaCategories}\n              isDisabled={category.value !== categories.pizza}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 0,\n                colors: {\n                  ...theme.colors,\n                  primary25: \"white\",\n                  primary: \"#ff6c00\",\n                },\n              })}\n            />\n          </>\n        )}\n        <p className={styles.title}>\n          <FormattedMessage id=\"product.name\" />\n        </p>\n        <div className={styles.editCard__titleName}>\n          <p className={style.editCard__titleLang}>\n            <FormattedMessage id=\"rus name\" />\n          </p>\n          <input\n            type=\"text\"\n            value={ruName}\n            onChange={(e) => setRuName(e.target.value)}\n            className={styles.editForm__inputLang}\n            minLength=\"3\"\n            maxLength=\"30\"\n            required\n          />\n          <p className={style.editCard__titleLang}>\n            <FormattedMessage id=\"eng name\" />\n          </p>\n          <input\n            type=\"text\"\n            value={enName}\n            onChange={(e) => setEnName(e.target.value)}\n            className={styles.editForm__inputLang}\n            minLength=\"3\"\n            maxLength=\"30\"\n            required\n          />\n          <p className={style.editCard__titleLang}>\n            <FormattedMessage id=\"ukr name\" />\n          </p>\n          <input\n            type=\"text\"\n            value={ukrName}\n            onChange={(e) => setUkrName(e.target.value)}\n            className={styles.editForm__inputLang}\n            minLength=\"3\"\n            maxLength=\"30\"\n            required\n          />\n        </div>\n        <p className={styles.title}>\n          <FormattedMessage id=\"product.price\" />\n          <span>, грн.</span>\n        </p>\n\n        {category.value === categories.pizza ? (\n          <div className={styles.editCard__titleName_price}>\n            <p className={style.editCard__titleLang}>M</p>\n            <input\n              type=\"number\"\n              value={M}\n              onChange={(e) => setM(e.target.value)}\n              className={styles.editForm__inputLang}\n              min=\"10\"\n              max=\"999\"\n              step=\"1\"\n              required\n            />\n\n            <p className={style.editCard__titleLang}>L</p>\n\n            <input\n              type=\"number\"\n              value={L}\n              onChange={(e) => setL(e.target.value)}\n              className={styles.editForm__inputLang}\n              min=\"10\"\n              max=\"999\"\n              step=\"1\"\n              required\n            />\n\n            <p className={style.editCard__titleLang}>XL</p>\n\n            <input\n              type=\"number\"\n              value={XL}\n              onChange={(e) => setXL(e.target.value)}\n              className={styles.editForm__inputLang}\n              min=\"10\"\n              max=\"999\"\n              step=\"1\"\n              required\n            />\n          </div>\n        ) : (\n          <div>\n            {/* <p className={`${style.editCard__titleLang} ${styles.title}`}>\n              <FormattedMessage id=\"product.price\" />\n            </p> */}\n            <input\n              type=\"number\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n              className={styles.editForm__inputLang_price}\n              min=\"10\"\n              max=\"999\"\n              step=\"1\"\n              required\n            />\n          </div>\n        )}\n\n        {category.value !== categories.pizza && (\n          <label className={styles.inputLabel}>\n            <h4 className={styles.title}>\n              <FormattedMessage id=\"product.description\" />\n            </h4>\n            <input\n              type=\"number\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              className={styles.descriptionInput}\n              min=\"0.3\"\n              max=\"999\"\n              step=\"0.01\"\n              required\n            />\n          </label>\n        )}\n\n        {fileLink && <img src={fileLink} alt=\"\" className={styles.photoImg} />}\n\n        <label className={`${styles.inputLabel} ${styles.btn}`}>\n          <h4 className={`${styles.btn} ${styles.btnInner}`}>\n            <FormattedMessage id=\"photo\" />\n          </h4>\n          <input\n            type=\"file\"\n            id=\"image\"\n            onChange={({ target: { files } }) => {\n              dispatch(productOperations.sendFile(files[0]));\n            }}\n            className={styles.inputImg}\n            accept=\".jpg, .jpeg, .png\"\n            required\n          />\n        </label>\n        {category.value === categories.pizza && (\n          <>\n            <IngredientSelect />\n            <label className={`${styles.inputLabel} ${styles.btn}`}>\n              <h4 className={`${styles.btn} ${styles.btnInner}`}>\n                <FormattedMessage id=\"update.createNewIngredient\" />\n              </h4>\n              <input\n                type=\"button\"\n                onClick={() => setBtnCreateIngrad(!BtnCreateIngrad)}\n                className={styles.inputCreatIng}\n              />\n            </label>\n          </>\n        )}\n        <button type=\"submit\" className={styles.btn}>\n          <FormattedMessage id=\"send\" />\n        </button>\n        {BtnCreateIngrad && <AddNewIngredient />}\n      </form>\n    </div>\n  );\n};\nexport default CreateNewProduct;\n"],"sourceRoot":""}