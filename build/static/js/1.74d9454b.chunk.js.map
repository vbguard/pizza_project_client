{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","redux/product/index.js","components/PizzaListItem/PizzaListItem.module.css","components/PizzaList/PizzaList.module.css","components/PizzaListItem/PizzaListItemHooks.js","components/PizzaList/PizzaList.js","components/PizzaList/PizzaListContainer.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","sizes","PizzaListItem","local","useSelector","lang","_id","name","price","images","useDispatch","useState","orderSizes","setOrderSizes","selectedSize","setSelectedSize","onAddProductToOrder","orderOperations","addProdToOrderList","successMessage","values","errorMessage","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","includes","filter","size","setTimeout","handleChange","value","target","useEffect","key","className","styles","pizzaListCard","Notification","confirm","forCard","imageItemWrapper","src","imageItem","alt","width","height","descriptionContainer","heading","length","map","ingredientItem","sizePriceContainer","radioButtonsList","index","sizeLabel","type","checked","onChange","radioButton","sizeText","sizePriceButtonWrapper","sizePriceWrapper","currency","addCart","onClick","PizzaListForTest","isLoading","productSelectors","pizzas","categories","pizzaListWrapper","Spinner","pizzaHeading","pizzaList","subcategory","PizzaListContainer","this","props","onFetchProductPizza","err","console","log","cancel","Component","mapDispatchToProps","productOperations","connect"],"mappings":"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","file":"static/js/1.74d9454b.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\n\nconst getError = (state) => state.products.errorReducer;\n\nconst getProducts = (state) => state.products.items;\n\nconst getFileLink = (state) => state.products.fileLink;\n\nconst getIngredients = (state) => state.products.ingredients;\n\nconst createNewIngredient = (state) => state.products.newIngredient;\n\nconst addIngredient = (state) => state.products.ingredient;\n\nexport default {\n  getLoading,\n  getError,\n  getProducts,\n  getFileLink,\n  getIngredients,\n  createNewIngredient,\n  addIngredient,\n};\n","import productActions from \"./productActions\";\nimport {\n  getAllIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  createNewIngredients,\n} from \"../../services/api\";\n\nconst fetchProducts = () => (dispatch) => {\n  dispatch(productActions.productsRequest());\n\n  getAllProducts()\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\n    .catch((error) => dispatch(productActions.productsError(error)));\n};\n\nconst fetchProductsByCategory = (category) => (dispatch) => {\n  dispatch(productActions.byCategoryRequest());\n\n  getProductsByCategory(category)\n    .then(({ data }) =>\n      dispatch(productActions.byCategorySuccess(data.products))\n    )\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\n};\n\nconst fetchProductById = (id) => (dispatch) => {\n  dispatch(productActions.byIdRequest());\n\n  getProductById(id)\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\n    .catch((error) => dispatch(productActions.byIdError(error)));\n};\n\n//for AdminPage\nconst sendFile = (file) => (dispatch) => {\n  dispatch(productActions.sendFileRequest());\n\n  postImage(file)\n    .then(({ data }) =>\n      dispatch(productActions.sendFileSuccess(data.image.file))\n    )\n    .catch((error) => dispatch(productActions.sendFileError(error)));\n};\n\nconst sendProduct = (product) => (dispatch) => {\n  dispatch(productActions.sendProductRequest());\n\n  postNewProduct(product)\n    .then(({ data }) => {\n      dispatch(productActions.sendProductSuccess(data.product));\n      dispatch(productActions.clearFile());\n    })\n    //проверить что приходит в data\n    .catch((error) => dispatch(productActions.sendProductError(error)));\n};\n\nconst getIngredients = () => (dispatch) => {\n  dispatch(productActions.getAllIngredientsRequest());\n\n  getAllIngredients()\n    .then(({ data }) =>\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\n    )\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\n};\nconst createNewIngredient = (ingredient) => (dispatch) => {\n  dispatch(productActions.createNewIngredientsRequest());\n\n  createNewIngredients(ingredient)\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\n    .catch((error) =>\n      dispatch(productActions.createNewIngredientsError(error))\n    );\n};\n\nconst updateProduct = (productId, newProduct) => (dispatch) => {\n  dispatch(productActions.updateProductRequest());\n\n  updateProductById(productId, newProduct)\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\n    .catch((error) => dispatch(productActions.updateProductError(error)));\n};\n\nconst deleteProduct = (productId) => (dispatch) => {\n  dispatch(productActions.deleteProductRequest());\n\n  deleteProductById(productId)\n    .then(\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\n      //проверить что приходит в data\n    )\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\n};\n\nexport default {\n  fetchProducts,\n  fetchProductsByCategory,\n  fetchProductById,\n\n  sendFile,\n  sendProduct,\n  getIngredients,\n  updateProduct,\n  deleteProduct,\n  createNewIngredient,\n};\n","import axios from \"axios\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\n\n//for Products\nconst getAllProducts = () => {\n  return axios.get(\"/products\");\n};\n\nconst getProductsByCategory = (category) => {\n  return axios.get(`/products/?category=\"${category}\"`, {\n    cancelToken: source.token,\n  });\n};\n\nconst getProductById = (id) => {\n  return axios.get(`/products/${id}`);\n};\n\nconst getAllIngredients = async () => {\n  return axios.get(`${baseURL}/ingredients`);\n};\nconst createNewIngredients = async (ingredients) => {\n  return axios.post(`${baseURL}/ingredients`, ingredients);\n};\n\nconst postNewProduct = (product) => {\n  return axios.post(`${baseURL}/products`, product);\n};\n\nconst updateProductById = (productId, newProduct) => {\n  return axios.put(`/products/${productId}`, newProduct);\n};\n\nconst deleteProductById = (productId) => {\n  return axios.delete(`/products/${productId}`);\n};\n\n//for Orders\n\n// other\nconst postImage = async (file) => {\n  const data = new FormData();\n  data.append(\"file\", file);\n\n  return axios.post(`${baseURL}/images`, data);\n};\n\n// developers\n\nconst fetchDevs = () => axios.get(\"/developers\");\n\n// Stocks\n\nconst fetchAllStocks = () => axios.get(\"/promo\");\n\nconst sendUserFile = (file) => axios.post(\"/images\", file);\n\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\n\nconst updateExistingStock = (stockId, newStock) =>\n  axios.put(`/promo/${stockId}`, newStock);\n\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\n\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\n\nexport {\n  fetchDevs,\n  getAllIngredients,\n  createNewIngredients,\n  postNewProduct,\n  postImage,\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  updateProductById,\n  deleteProductById,\n  fetchAllStocks,\n  sendUserFile,\n  sendNewStock,\n  updateExistingStock,\n  deleteExistingStock,\n  getExistingStockById,\n};\n","export { default as productActions } from \"./productActions\";\nexport { default as productOperations } from \"./productOperations\";\nexport { default as productSelectors } from \"./productSelectors\";\nexport { default as productReducer } from \"./productReducer\";\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pizzaListCard\":\"PizzaListItem_pizzaListCard__1PTxR\",\"imageItemWrapper\":\"PizzaListItem_imageItemWrapper__2Vu4-\",\"imageItem\":\"PizzaListItem_imageItem__1CeeS\",\"descriptionContainer\":\"PizzaListItem_descriptionContainer__TGg_S\",\"sizePriceContainer\":\"PizzaListItem_sizePriceContainer__2S9IJ\",\"sizePriceButtonWrapper\":\"PizzaListItem_sizePriceButtonWrapper__W3atI\",\"sizePriceWrapper\":\"PizzaListItem_sizePriceWrapper__3kbYt\",\"heading\":\"PizzaListItem_heading__35UfB\",\"ingredients\":\"PizzaListItem_ingredients__3zafV\",\"ingredientItem\":\"PizzaListItem_ingredientItem__2fzlh\",\"radioButtonsList\":\"PizzaListItem_radioButtonsList__3Mb1q\",\"sizeLabel\":\"PizzaListItem_sizeLabel__-gAsJ\",\"radioButton\":\"PizzaListItem_radioButton__119Od\",\"sizeText\":\"PizzaListItem_sizeText__2uwp1\",\"price\":\"PizzaListItem_price__2W8Di\",\"currency\":\"PizzaListItem_currency__3v16M\",\"addCart\":\"PizzaListItem_addCart__ffA9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pizzaHeading\":\"PizzaList_pizzaHeading__3VzZv\",\"pizzaList\":\"PizzaList_pizzaList__moZvM\",\"pizzaListWrapper\":\"PizzaList_pizzaListWrapper__2kbOR\"};","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { orderOperations } from \"../../redux/order\";\nimport Notification from \"../Notification\";\nimport styles from \"./PizzaListItem.module.css\";\n\nconst sizes = [\"M\", \"L\", \"XL\"];\n\nfunction PizzaListItem(product) {\n  const local = useSelector((state) => state.local.lang);\n\n  const { _id, name, price, ingredients, images } = product;\n\n  const dispatch = useDispatch();\n  const [orderSizes, setOrderSizes] = useState([\"M\", \"L\", \"XL\"]);\n  const [selectedSize, setSelectedSize] = useState(\"M\");\n  const onAddProductToOrder = () =>\n    dispatch(orderOperations.addProdToOrderList(product, selectedSize));\n\n  const successMessage = (\n    <FormattedMessage\n      id=\"order.pizzaSuccess\"\n      values={{\n        name: name[local],\n      }}\n    />\n  );\n\n  const errorMessage = (\n    <FormattedMessage\n      id=\"order.pizzaError\"\n      values={{\n        name: name[local],\n      }}\n    />\n  );\n\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\n  const [message, setMessage] = useState(successMessage);\n\n  const addProd = async () => {\n    if (isAddedProdToOrder) {\n      if (orderSizes.includes(selectedSize)) {\n        setIsAddedProdToOrder(false);\n        setMessage(successMessage);\n        onAddProductToOrder(product);\n        setOrderSizes(orderSizes.filter((size) => size !== selectedSize));\n        return await setTimeout(() => setIsAddedProdToOrder(true), 10);\n      }\n      setIsAddedProdToOrder(false);\n      setMessage(errorMessage);\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\n    }\n    onAddProductToOrder(product);\n    setOrderSizes(orderSizes.filter((size) => size !== selectedSize));\n    setIsAddedProdToOrder(true);\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setSelectedSize(value);\n  };\n\n  useEffect(() => {\n    setMessage(\n      <FormattedMessage\n        id=\"order.success\"\n        values={{\n          name: name[local],\n        }}\n      />\n    );\n  }, [local, name]);\n\n  return (\n    <li key={_id} className={styles.pizzaListCard}>\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\n      <div className={styles.imageItemWrapper}>\n        <img\n          src={images}\n          className={styles.imageItem}\n          alt=\"\"\n          width=\"354px\"\n          height=\"192px\"\n        />\n      </div>\n      <div className={styles.descriptionContainer}>\n        <p className={styles.heading}>{name[local]}</p>\n        {ingredients.length > 0 && (\n          <ul className={styles.ingredients}>\n            {ingredients.map((ingredient) => (\n              <li key={ingredient._id}>\n                <span className={styles.ingredientItem}>\n                  {ingredient.name ? ingredient.name[local] : null}\n                </span>\n              </li>\n            ))}\n          </ul>\n        )}\n        {/* <ul className={styles.ingredients}>\n          {ingredients.map((ingredient) => (\n            <li key={ingredient._id}>\n              <span className={styles.ingredientItem}>\n                {ingredient.name[local]}\n              </span>\n            </li>\n          ))}\n        </ul> */}\n        <form>\n          <div className={styles.sizePriceContainer}>\n            <ul className={styles.radioButtonsList}>\n              {sizes.map((size, index) => (\n                <li key={index}>\n                  <label className={styles.sizeLabel}>\n                    <input\n                      type=\"radio\"\n                      value={size}\n                      checked={size === selectedSize}\n                      onChange={handleChange}\n                      className={styles.radioButton}\n                      key={size}\n                    />\n                    <span className={styles.sizeText}>{size}</span>\n                  </label>\n                </li>\n              ))}\n            </ul>\n            <div className={styles.sizePriceButtonWrapper}>\n              <div className={styles.sizePriceWrapper}>\n                <span className={styles.price}>{price[selectedSize]}.00</span>\n                <span className={styles.currency}>\n                  {\" \"}\n                  <FormattedMessage id=\"grn\" />\n                </span>\n              </div>\n              <button\n                className={styles.addCart}\n                type=\"button\"\n                onClick={() => addProd()}\n              >\n                <FormattedMessage id=\"orders.chart\" />\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </li>\n  );\n}\n\nexport default PizzaListItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { productSelectors } from \"../../redux/product\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport PizzaListItem from \"../PizzaListItem/PizzaListItemHooks\";\nimport Spinner from \"../Spinner\";\n// import productsJSON from \"../../services/products.json\";\nimport styles from \"./PizzaList.module.css\";\n\nexport default function PizzaListForTest({ products }) {\n  const local = useSelector((state) => state.local.lang);\n  const isLoading = useSelector(productSelectors.getLoading);\n\n  const pizzas = products.filter(({ categories }) => categories === \"pizza\");\n\n  return (\n    <div className={styles.pizzaListWrapper}>\n      {isLoading && <Spinner />}\n      <h2 className={styles.pizzaHeading}>\n        <FormattedMessage id=\"pizza.classic\" />\n      </h2>\n      <ul className={styles.pizzaList}>\n        {pizzas\n          .filter(({ subcategory }) => subcategory === \"classic\")\n          .map((product) => (\n            <PizzaListItem {...product} key={product._id} local={local} />\n          ))}\n      </ul>\n      <h2 className={styles.pizzaHeading}>\n        <FormattedMessage id=\"pizza.special\" />\n      </h2>\n      <ul className={styles.pizzaList}>\n        {pizzas\n          .filter(({ subcategory }) => subcategory === \"branded\")\n          .map((product) => (\n            <PizzaListItem {...product} key={product._id} local={local} />\n          ))}\n      </ul>\n\n      <h2 className={styles.pizzaHeading}>\n        <FormattedMessage id=\"pizza.premium\" />\n      </h2>\n      <ul className={styles.pizzaList}>\n        {pizzas\n          .filter(({ subcategory }) => subcategory === \"premium\")\n          .map((product) => (\n            <PizzaListItem {...product} key={product._id} local={local} />\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport PizzaList from \"./PizzaList\";\nimport { productOperations, productSelectors } from \"../../redux/product\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\nclass PizzaListContainer extends Component {\n  async componentDidMount() {\n    try {\n      this.props.onFetchProductPizza(\"pizza\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async componentWillUnmount() {\n    try {\n      source.cancel(\"Operation canceled\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return <PizzaList {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { products: productSelectors.getProducts(state) };\n};\n\nconst mapDispatchToProps = {\n  onFetchProductPizza: productOperations.fetchProductsByCategory,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaListContainer);\n"],"sourceRoot":""}